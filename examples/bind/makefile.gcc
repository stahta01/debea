# =========================================================================
#     This makefile was generated by
#     Bakefile 0.2.8 (http://www.bakefile.org)
#     Do not modify, all changes will be overwritten!
# =========================================================================



# -------------------------------------------------------------------------
# These are configurable options:
# -------------------------------------------------------------------------

# C++ compiler 
CXX = g++

# Standard flags for C++ 
CXXFLAGS ?= 

# Standard preprocessor flags (common for CC and CXX) 
CPPFLAGS ?= 

# Standard linker flags 
LDFLAGS ?= 

# Set to 1 to build debug version [0,1]
DEBUG ?= 0

# Set to 1 to build components depended on wxWidgets GUI libraries [0,1]
USE_GUI ?= 1

# Set to 1 to build library as dll [0,1]
SHARED ?= 0

# Set to 1 to build postgresql driver [0,1]
PGSQL ?= 0

# Set to 1 to build SQLLite3 driver [0,1]
SQLITE3 ?= 0

# Set to 1 to build support for csv file format [0,1]
CSV ?= 0

# Set to 1 to build support for xml file format [0,1]
XML ?= 0

# Set to 1 to build ODBC dba driver [0,1]
ODBC ?= 0

# If set to 1 then SQL queries are printed to stderr [0,1]
SQL_DEBUG ?= 0

# Compile in dba 1.0 compatibile API [0,1]
DBA_COMPAT_1_0 ?= 0



# -------------------------------------------------------------------------
# Do not modify the rest of this file!
# -------------------------------------------------------------------------

### Variables: ###

CPPDEPS = -MT$@ -MF$@.d -MD -MP
BIND_CXXFLAGS = -I.\..\.. $(____PGSQL_1_p) $(____SQLITE3_2_p) $(____ODBC_3_p) \
	$(____CSV_4_p) $(____XML_5_p) $(__1_0_compat_p) $(____DEBUG_6_p) \
	$(____DEBUG_7_8) $(____DEBUG_9_1) -DAPPVERSION=\"1.4.2\" -I$(DEVEL)\include \
	$(CPPFLAGS) $(CXXFLAGS)
BIND_OBJECTS =  \
	$(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\bind_bind.o

### Conditionally set variables: ###

ifeq ($(DEBUG),1)
LIBDEBUGSUFFIX = d
endif
ifeq ($(PGSQL),0)
____PGSQL_1_p = 
endif
ifeq ($(PGSQL),1)
____PGSQL_1_p = -DTEST_POSTGRES
endif
ifeq ($(SQLITE3),0)
____SQLITE3_2_p = 
endif
ifeq ($(SQLITE3),1)
____SQLITE3_2_p = -DTEST_SQLITE3
endif
ifeq ($(ODBC),0)
____ODBC_3_p = 
endif
ifeq ($(ODBC),1)
____ODBC_3_p = -DTEST_ODBC
endif
ifeq ($(CSV),0)
____CSV_4_p = 
endif
ifeq ($(CSV),1)
____CSV_4_p = -DTEST_CSV
endif
ifeq ($(XML),0)
____XML_5_p = 
endif
ifeq ($(XML),1)
____XML_5_p = -DTEST_XML
endif
ifeq ($(DBA_COMPAT_1_0),1)
__1_0_compat_p = -DDBA_COMPAT_1_0
endif
ifeq ($(DEBUG),0)
____DEBUG_6_p = -DNDEBUG
endif
ifeq ($(DEBUG),1)
____DEBUG_6_p = 
endif
ifeq ($(DEBUG),0)
____DEBUG_7_8 = -O2
endif
ifeq ($(DEBUG),1)
____DEBUG_7_8 = -O0
endif
ifeq ($(DEBUG),0)
DEBUGBUILDPOSTFIX = release
endif
ifeq ($(DEBUG),1)
DEBUGBUILDPOSTFIX = debug
endif
ifeq ($(SHARED),0)
SHAREDBUILDPOSTFIX = static
endif
ifeq ($(SHARED),1)
SHAREDBUILDPOSTFIX = shared
endif
ifeq ($(DEBUG),0)
____DEBUG_9_1 = 
endif
ifeq ($(DEBUG),1)
____DEBUG_9_1 = -g
endif


all: $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)
$(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX):
	-if not exist $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX) mkdir $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)

### Targets: ###

all: $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\bind.exe

clean: 
	-if exist $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\*.o del $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\*.o
	-if exist $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\*.d del $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\*.d
	-if exist $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\bind.exe del $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\bind.exe

check: 

install: all

resources: 

packages: 

doc: 

doc-install: 

$(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\bind.exe: $(BIND_OBJECTS)
	$(CXX) -o $@ $(BIND_OBJECTS)   -L$(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX) $(____DEBUG_9_1) -L$(DEVEL)\lib $(LDFLAGS)  -ldba$(LIBDEBUGSUFFIX)

$(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)\bind_bind.o: ./bind.cpp
	$(CXX) -c -o $@ $(BIND_CXXFLAGS) $(CPPDEPS) $<

.PHONY: all clean check install resources packages doc doc-install


SHELL := $(COMSPEC)

# Dependencies tracking:
-include $(BUILD_DIR)\gcc_$(DEBUGBUILDPOSTFIX)_$(SHAREDBUILDPOSTFIX)/*.d
